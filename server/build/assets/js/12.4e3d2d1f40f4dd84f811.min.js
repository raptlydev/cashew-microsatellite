(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[12],{

/***/ 678:
/***/ (function(module, exports, __webpack_require__) {

(function (factory) {
	 true ? (module['exports'] = factory()) :
		undefined
}(function () {

	'use strict'

	return function (insertRule) {
		var delimiter = '/*|*/'
		var needle = delimiter+'}'

		function toSheet (block) {
			if (block)
				try {
					insertRule(block + '}')
				} catch (e) {}
		}

		return function ruleSheet (context, content, selectors, parents, line, column, length, ns, depth, at) {
			switch (context) {
				// property
				case 1:
					// @import
					if (depth === 0 && content.charCodeAt(0) === 64)
						return insertRule(content+';'), ''
					break
				// selector
				case 2:
					if (ns === 0)
						return content + delimiter
					break
				// at-rule
				case 3:
					switch (ns) {
						// @font-face, @page
						case 102:
						case 112:
							return insertRule(selectors[0]+content), ''
						default:
							return content + (at === 0 ? delimiter : '')
					}
				case -2:
					content.split(needle).forEach(toSheet)
			}
		}
	}
}))


/***/ }),

/***/ 681:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// UNUSED EXPORTS: concatArrays, merge

// CONCATENATED MODULE: ./node_modules/is-what/dist/index.esm.js
/**
 * Returns the object type of the given payload
 *
 * @param {*} payload
 * @returns {string}
 */
function getType(payload) {
    return Object.prototype.toString.call(payload).slice(8, -1);
}
/**
 * Returns whether the payload is undefined
 *
 * @param {*} payload
 * @returns {payload is undefined}
 */
function isUndefined(payload) {
    return getType(payload) === 'Undefined';
}
/**
 * Returns whether the payload is null
 *
 * @param {*} payload
 * @returns {payload is null}
 */
function isNull(payload) {
    return getType(payload) === 'Null';
}
/**
 * Returns whether the payload is a plain JavaScript object (excluding special classes or objects with other prototypes)
 *
 * @param {*} payload
 * @returns {payload is PlainObject}
 */
function isPlainObject(payload) {
    if (getType(payload) !== 'Object')
        return false;
    return payload.constructor === Object && Object.getPrototypeOf(payload) === Object.prototype;
}
/**
 * Returns whether the payload is a plain JavaScript object (excluding special classes or objects with other prototypes)
 *
 * @param {*} payload
 * @returns {payload is PlainObject}
 */
function isObject(payload) {
    return isPlainObject(payload);
}
/**
 * Returns whether the payload is a an empty object (excluding special classes or objects with other prototypes)
 *
 * @param {*} payload
 * @returns {payload is { [K in any]: never }}
 */
function isEmptyObject(payload) {
    return isPlainObject(payload) && Object.keys(payload).length === 0;
}
/**
 * Returns whether the payload is a an empty object (excluding special classes or objects with other prototypes)
 *
 * @param {*} payload
 * @returns {payload is PlainObject}
 */
function isFullObject(payload) {
    return isPlainObject(payload) && Object.keys(payload).length > 0;
}
/**
 * Returns whether the payload is an any kind of object (including special classes or objects with different prototypes)
 *
 * @param {*} payload
 * @returns {payload is PlainObject}
 */
function isAnyObject(payload) {
    return getType(payload) === 'Object';
}
/**
 * Returns whether the payload is an object like a type passed in < >
 *
 * Usage: isObjectLike<{id: any}>(payload) // will make sure it's an object and has an `id` prop.
 *
 * @template T this must be passed in < >
 * @param {*} payload
 * @returns {payload is T}
 */
function isObjectLike(payload) {
    return isAnyObject(payload);
}
/**
 * Returns whether the payload is a function (regular or async)
 *
 * @param {*} payload
 * @returns {payload is AnyFunction}
 */
function isFunction(payload) {
    return typeof payload === 'function';
}
/**
 * Returns whether the payload is an array
 *
 * @param {any} payload
 * @returns {payload is any[]}
 */
function isArray(payload) {
    return getType(payload) === 'Array';
}
/**
 * Returns whether the payload is a an array with at least 1 item
 *
 * @param {*} payload
 * @returns {payload is any[]}
 */
function isFullArray(payload) {
    return isArray(payload) && payload.length > 0;
}
/**
 * Returns whether the payload is a an empty array
 *
 * @param {*} payload
 * @returns {payload is []}
 */
function isEmptyArray(payload) {
    return isArray(payload) && payload.length === 0;
}
/**
 * Returns whether the payload is a string
 *
 * @param {*} payload
 * @returns {payload is string}
 */
function isString(payload) {
    return getType(payload) === 'String';
}
/**
 * Returns whether the payload is a string, BUT returns false for ''
 *
 * @param {*} payload
 * @returns {payload is string}
 */
function isFullString(payload) {
    return isString(payload) && payload !== '';
}
/**
 * Returns whether the payload is ''
 *
 * @param {*} payload
 * @returns {payload is string}
 */
function isEmptyString(payload) {
    return payload === '';
}
/**
 * Returns whether the payload is a number (but not NaN)
 *
 * This will return `false` for `NaN`!!
 *
 * @param {*} payload
 * @returns {payload is number}
 */
function isNumber(payload) {
    return getType(payload) === 'Number' && !isNaN(payload);
}
/**
 * Returns whether the payload is a boolean
 *
 * @param {*} payload
 * @returns {payload is boolean}
 */
function isBoolean(payload) {
    return getType(payload) === 'Boolean';
}
/**
 * Returns whether the payload is a regular expression (RegExp)
 *
 * @param {*} payload
 * @returns {payload is RegExp}
 */
function isRegExp(payload) {
    return getType(payload) === 'RegExp';
}
/**
 * Returns whether the payload is a Map
 *
 * @param {*} payload
 * @returns {payload is Map<any, any>}
 */
function isMap(payload) {
    return getType(payload) === 'Map';
}
/**
 * Returns whether the payload is a WeakMap
 *
 * @param {*} payload
 * @returns {payload is WeakMap<any, any>}
 */
function isWeakMap(payload) {
    return getType(payload) === 'WeakMap';
}
/**
 * Returns whether the payload is a Set
 *
 * @param {*} payload
 * @returns {payload is Set<any>}
 */
function isSet(payload) {
    return getType(payload) === 'Set';
}
/**
 * Returns whether the payload is a WeakSet
 *
 * @param {*} payload
 * @returns {payload is WeakSet<any>}
 */
function isWeakSet(payload) {
    return getType(payload) === 'WeakSet';
}
/**
 * Returns whether the payload is a Symbol
 *
 * @param {*} payload
 * @returns {payload is symbol}
 */
function isSymbol(payload) {
    return getType(payload) === 'Symbol';
}
/**
 * Returns whether the payload is a Date, and that the date is valid
 *
 * @param {*} payload
 * @returns {payload is Date}
 */
function isDate(payload) {
    return getType(payload) === 'Date' && !isNaN(payload);
}
/**
 * Returns whether the payload is a Blob
 *
 * @param {*} payload
 * @returns {payload is Blob}
 */
function isBlob(payload) {
    return getType(payload) === 'Blob';
}
/**
 * Returns whether the payload is a File
 *
 * @param {*} payload
 * @returns {payload is File}
 */
function isFile(payload) {
    return getType(payload) === 'File';
}
/**
 * Returns whether the payload is a Promise
 *
 * @param {*} payload
 * @returns {payload is Promise<any>}
 */
function isPromise(payload) {
    return getType(payload) === 'Promise';
}
/**
 * Returns whether the payload is an Error
 *
 * @param {*} payload
 * @returns {payload is Error}
 */
function isError(payload) {
    return getType(payload) === 'Error';
}
/**
 * Returns whether the payload is literally the value `NaN` (it's `NaN` and also a `number`)
 *
 * @param {*} payload
 * @returns {payload is typeof NaN}
 */
function isNaNValue(payload) {
    return getType(payload) === 'Number' && isNaN(payload);
}
/**
 * Returns whether the payload is a primitive type (eg. Boolean | Null | Undefined | Number | String | Symbol)
 *
 * @param {*} payload
 * @returns {(payload is boolean | null | undefined | number | string | symbol)}
 */
function isPrimitive(payload) {
    return (isBoolean(payload) ||
        isNull(payload) ||
        isUndefined(payload) ||
        isNumber(payload) ||
        isString(payload) ||
        isSymbol(payload));
}
/**
 * Returns true whether the payload is null or undefined
 *
 * @param {*} payload
 * @returns {(payload is null | undefined)}
 */
var isNullOrUndefined = isOneOf(isNull, isUndefined);
function isOneOf(a, b, c, d, e) {
    return function (value) {
        return a(value) || b(value) || (!!c && c(value)) || (!!d && d(value)) || (!!e && e(value));
    };
}
/**
 * Does a generic check to check that the given payload is of a given type.
 * In cases like Number, it will return true for NaN as NaN is a Number (thanks javascript!);
 * It will, however, differentiate between object and null
 *
 * @template T
 * @param {*} payload
 * @param {T} type
 * @throws {TypeError} Will throw type error if type is an invalid type
 * @returns {payload is T}
 */
function isType(payload, type) {
    if (!(type instanceof Function)) {
        throw new TypeError('Type must be a function');
    }
    if (!Object.prototype.hasOwnProperty.call(type, 'prototype')) {
        throw new TypeError('Type is not a class');
    }
    // Classes usually have names (as functions usually have names)
    var name = type.name;
    return getType(payload) === name || Boolean(payload && payload.constructor === type);
}



// CONCATENATED MODULE: ./node_modules/merge-anything/dist/index.esm.js


/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
}

function assignProp(carry, key, newVal, originalObject) {
    var propType = originalObject.propertyIsEnumerable(key)
        ? 'enumerable'
        : 'nonenumerable';
    if (propType === 'enumerable')
        carry[key] = newVal;
    if (propType === 'nonenumerable') {
        Object.defineProperty(carry, key, {
            value: newVal,
            enumerable: false,
            writable: true,
            configurable: true
        });
    }
}
function mergeRecursively(origin, newComer, extensions) {
    // work directly on newComer if its not an object
    if (!isPlainObject(newComer)) {
        // extend merge rules
        if (extensions && isArray(extensions)) {
            extensions.forEach(function (extend) {
                newComer = extend(origin, newComer);
            });
        }
        return newComer;
    }
    // define newObject to merge all values upon
    var newObject = {};
    if (isPlainObject(origin)) {
        var props_1 = Object.getOwnPropertyNames(origin);
        var symbols_1 = Object.getOwnPropertySymbols(origin);
        newObject = __spreadArrays(props_1, symbols_1).reduce(function (carry, key) {
            // @ts-ignore
            var targetVal = origin[key];
            if ((!isSymbol(key) && !Object.getOwnPropertyNames(newComer).includes(key)) ||
                (isSymbol(key) && !Object.getOwnPropertySymbols(newComer).includes(key))) {
                assignProp(carry, key, targetVal, origin);
            }
            return carry;
        }, {});
    }
    var props = Object.getOwnPropertyNames(newComer);
    var symbols = Object.getOwnPropertySymbols(newComer);
    var result = __spreadArrays(props, symbols).reduce(function (carry, key) {
        // re-define the origin and newComer as targetVal and newVal
        var newVal = newComer[key];
        var targetVal = (isPlainObject(origin))
            // @ts-ignore
            ? origin[key]
            : undefined;
        // extend merge rules
        if (extensions && isArray(extensions)) {
            extensions.forEach(function (extend) {
                newVal = extend(targetVal, newVal);
            });
        }
        // When newVal is an object do the merge recursively
        if (targetVal !== undefined && isPlainObject(newVal)) {
            newVal = mergeRecursively(targetVal, newVal, extensions);
        }
        assignProp(carry, key, newVal, newComer);
        return carry;
    }, newObject);
    return result;
}
/**
 * Merge anything recursively.
 * Objects get merged, special objects (classes etc.) are re-assigned "as is".
 * Basic types overwrite objects or other basic types.
 *
 * @param {(IConfig | any)} origin
 * @param {...any[]} newComers
 * @returns the result
 */
function merge(origin) {
    var newComers = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        newComers[_i - 1] = arguments[_i];
    }
    var extensions = null;
    var base = origin;
    if (isPlainObject(origin) && origin.extensions && Object.keys(origin).length === 1) {
        base = {};
        extensions = origin.extensions;
    }
    return newComers.reduce(function (result, newComer) {
        return mergeRecursively(result, newComer, extensions);
    }, base);
}

function concatArrays(originVal, newVal) {
    if (isArray(originVal) && isArray(newVal)) {
        // concat logic
        return originVal.concat(newVal);
    }
    return newVal; // always return newVal as fallback!!
}

/* harmony default export */ var index_esm = __webpack_exports__["a"] = (merge);



/***/ }),

/***/ 863:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/classCallCheck.js
var classCallCheck = __webpack_require__(52);
var classCallCheck_default = /*#__PURE__*/__webpack_require__.n(classCallCheck);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/createClass.js
var createClass = __webpack_require__(53);
var createClass_default = /*#__PURE__*/__webpack_require__.n(createClass);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/inherits.js
var inherits = __webpack_require__(54);
var inherits_default = /*#__PURE__*/__webpack_require__.n(inherits);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js
var possibleConstructorReturn = __webpack_require__(55);
var possibleConstructorReturn_default = /*#__PURE__*/__webpack_require__.n(possibleConstructorReturn);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/getPrototypeOf.js
var getPrototypeOf = __webpack_require__(39);
var getPrototypeOf_default = /*#__PURE__*/__webpack_require__.n(getPrototypeOf);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(0);
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 24 modules
var es = __webpack_require__(43);

// EXTERNAL MODULE: ./node_modules/react-router/esm/react-router.js
var react_router = __webpack_require__(24);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js
var taggedTemplateLiteral = __webpack_require__(628);
var taggedTemplateLiteral_default = /*#__PURE__*/__webpack_require__.n(taggedTemplateLiteral);

// EXTERNAL MODULE: ./node_modules/styled-components/dist/styled-components.browser.esm.js
var styled_components_browser_esm = __webpack_require__(677);

// CONCATENATED MODULE: ./src/components/tutorial/pageStyle.js
var _templateObject;var PageStyle=styled_components_browser_esm["a" /* default */].div(_templateObject||(_templateObject=taggedTemplateLiteral_default()(["\n.ant-card.landingPageContainer.ant-card-bordered {\n    height: 86vh;\n    background-image: url(\"../../assets/images/humdard-background.jpg\");\n}\n\n.welcomeMessage {\n    width: fit-content;\n    margin: 35px auto 10px;\n    font-size: 25px;\n    font-weight: 600;\n    text-decoration: underline;\n}\n\n.welcomeDesc {\n    margin: 0 auto;\n    width: fit-content;\n    font-size: 18px;\n    font-weight: 500;\n}\n\n.about-history-txt b {\n    font-weight: 700;\n}\n\n.section {\n    margin: 0 0 30px 0;\n}\n"])));/* harmony default export */ var pageStyle = (PageStyle);
// CONCATENATED MODULE: ./src/components/tutorial/index.js
function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=getPrototypeOf_default()(Derived),result;if(hasNativeReflectConstruct){var NewTarget=getPrototypeOf_default()(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return possibleConstructorReturn_default()(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}var PATH="/";var tutorial_Tutorial=/*#__PURE__*/function(_Component){inherits_default()(Tutorial,_Component);var _super=_createSuper(Tutorial);function Tutorial(){classCallCheck_default()(this,Tutorial);return _super.apply(this,arguments);}createClass_default()(Tutorial,[{key:"render",value:function render(){return/*#__PURE__*/react_default.a.createElement(pageStyle,null,/*#__PURE__*/react_default.a.createElement("div",{className:"container"},/*#__PURE__*/react_default.a.createElement("div",{className:"row background"},/*#__PURE__*/react_default.a.createElement("div",{className:"col-xl-9 col-lg-9 col-md-9 col-sm-9"},/*#__PURE__*/react_default.a.createElement("div",{className:"text-bg"},/*#__PURE__*/react_default.a.createElement("h1",null,"Tutorial")))),/*#__PURE__*/react_default.a.createElement("div",{className:"background"},/*#__PURE__*/react_default.a.createElement("div",{className:"container"},/*#__PURE__*/react_default.a.createElement("div",{className:"about-history-content"},/*#__PURE__*/react_default.a.createElement("div",{className:"row section"},/*#__PURE__*/react_default.a.createElement("div",{className:"col-md-10 col-sm-12"},/*#__PURE__*/react_default.a.createElement("div",{className:"single-about-history"},/*#__PURE__*/react_default.a.createElement("div",{className:"about-history-txt"},/*#__PURE__*/react_default.a.createElement("p",null,"CMDB database contain seven tabs in the sidebar of the each page."),/*#__PURE__*/react_default.a.createElement("p",null,/*#__PURE__*/react_default.a.createElement("b",null,"Home:"),"\xA0Contain brief introductory information about cashew and CMDB database"),/*#__PURE__*/react_default.a.createElement("p",null,/*#__PURE__*/react_default.a.createElement("b",null,"About:"),"\xA0Gives general information of microsatellite/ SSRs, methods of SSR markers development and classifications of SSRs"),/*#__PURE__*/react_default.a.createElement("p",null,/*#__PURE__*/react_default.a.createElement("b",null,"Database Search:")," Allows retrieving or searching of CMDB for both genomic and genic microsatellite/ SSRs. Within the genomic and genic SSRs that are in silico mined and experimentally validated SSRs can be searched and downloaded using different search parameters."),/*#__PURE__*/react_default.a.createElement("p",null,/*#__PURE__*/react_default.a.createElement("b",null,"Analysis:"),"\xA0Provides statistical data of distribution of different SSRs in the genome and shoot transcriptomes of cashew."),/*#__PURE__*/react_default.a.createElement("p",null,/*#__PURE__*/react_default.a.createElement("b",null,"Tutorial:"),"\xA0Step by step guide on how to retrieve the microsatellite markers data from database based on different parameters."),/*#__PURE__*/react_default.a.createElement("p",null,/*#__PURE__*/react_default.a.createElement("b",null,"Resources:"),"\xA0Provides the links to the portal related to cashew crop and bioinformatics research."),/*#__PURE__*/react_default.a.createElement("p",null,/*#__PURE__*/react_default.a.createElement("b",null,"Team/ Contact Us:"),"\xA0Details of the team members involved in the construction of CMDB database and Contact detail of the project investigator."))))),/*#__PURE__*/react_default.a.createElement("div",{className:"row section"},/*#__PURE__*/react_default.a.createElement("div",{className:"col-md-10 col-sm-12"},/*#__PURE__*/react_default.a.createElement("div",{className:"about-history-txt"},/*#__PURE__*/react_default.a.createElement("div",{className:"single-about-history"},/*#__PURE__*/react_default.a.createElement("div",{className:"about-history-img"},/*#__PURE__*/react_default.a.createElement("img",{src:"assets/images/tutorial/Pic1.png",alt:"about"}))))),/*#__PURE__*/react_default.a.createElement("div",{className:"col-md-10 col-sm-12"},/*#__PURE__*/react_default.a.createElement("div",{className:"single-about-history"},/*#__PURE__*/react_default.a.createElement("div",{className:"about-history-txt"},/*#__PURE__*/react_default.a.createElement("p",null,/*#__PURE__*/react_default.a.createElement("b",null,"#Home")," page contains the basic description about the\xA0Cashew, and CMDB database."))))),/*#__PURE__*/react_default.a.createElement("div",{className:"row section"},/*#__PURE__*/react_default.a.createElement("div",{className:"col-md-10 col-sm-12"},/*#__PURE__*/react_default.a.createElement("div",{className:"about-history-txt"},/*#__PURE__*/react_default.a.createElement("div",{className:"single-about-history"},/*#__PURE__*/react_default.a.createElement("div",{className:"about-history-img"},/*#__PURE__*/react_default.a.createElement("img",{src:"assets/images/tutorial/Pic2.png",alt:"about"}))))),/*#__PURE__*/react_default.a.createElement("div",{className:"col-md-10 col-sm-12"},/*#__PURE__*/react_default.a.createElement("div",{className:"single-about-history"},/*#__PURE__*/react_default.a.createElement("div",{className:"about-history-txt"},/*#__PURE__*/react_default.a.createElement("p",null,/*#__PURE__*/react_default.a.createElement("b",null,"#About")," page provides general information of microsatellite/ SSRs."))))),/*#__PURE__*/react_default.a.createElement("div",{className:"row section"},/*#__PURE__*/react_default.a.createElement("div",{className:"col-md-10 col-sm-12"},/*#__PURE__*/react_default.a.createElement("div",{className:"about-history-txt"},/*#__PURE__*/react_default.a.createElement("div",{className:"single-about-history"},/*#__PURE__*/react_default.a.createElement("div",{className:"about-history-img"},/*#__PURE__*/react_default.a.createElement("img",{src:"assets/images/tutorial/Pic3.png",alt:"about"}))))),/*#__PURE__*/react_default.a.createElement("div",{className:"col-md-10 col-sm-12"},/*#__PURE__*/react_default.a.createElement("div",{className:"single-about-history"},/*#__PURE__*/react_default.a.createElement("div",{className:"about-history-txt"},/*#__PURE__*/react_default.a.createElement("p",null,/*#__PURE__*/react_default.a.createElement("b",null,"#Database Search:")," Allows retrieving or searching of CMDB for both genomic and genic microsatellite/ SSRs."))))),/*#__PURE__*/react_default.a.createElement("div",{className:"row section"},/*#__PURE__*/react_default.a.createElement("div",{className:"col-md-10 col-sm-12"},/*#__PURE__*/react_default.a.createElement("div",{className:"about-history-txt"},/*#__PURE__*/react_default.a.createElement("div",{className:"single-about-history"},/*#__PURE__*/react_default.a.createElement("div",{className:"about-history-img"},/*#__PURE__*/react_default.a.createElement("img",{src:"assets/images/tutorial/Pic4.png",alt:"about"}))))),/*#__PURE__*/react_default.a.createElement("div",{className:"col-md-10 col-sm-12"},/*#__PURE__*/react_default.a.createElement("div",{className:"single-about-history"},/*#__PURE__*/react_default.a.createElement("div",{className:"about-history-txt"},/*#__PURE__*/react_default.a.createElement("p",null,/*#__PURE__*/react_default.a.createElement("b",null,"#Database Search:")," Within the genomic and genic SSRs both in silico mined and experimentally validated SSRs can be searched and downloaded using different search parameters."))))),/*#__PURE__*/react_default.a.createElement("div",{className:"row section"},/*#__PURE__*/react_default.a.createElement("div",{className:"col-md-10 col-sm-12"},/*#__PURE__*/react_default.a.createElement("div",{className:"about-history-txt"},/*#__PURE__*/react_default.a.createElement("div",{className:"single-about-history"},/*#__PURE__*/react_default.a.createElement("div",{className:"about-history-img"},/*#__PURE__*/react_default.a.createElement("img",{src:"assets/images/tutorial/Pic5.png",alt:"about"}))))),/*#__PURE__*/react_default.a.createElement("div",{className:"col-md-10 col-sm-12"},/*#__PURE__*/react_default.a.createElement("div",{className:"single-about-history"},/*#__PURE__*/react_default.a.createElement("div",{className:"about-history-txt"},/*#__PURE__*/react_default.a.createElement("p",null,/*#__PURE__*/react_default.a.createElement("b",null,"#Database Search:")," SSRs can be searched using multiple options at a time."))))),/*#__PURE__*/react_default.a.createElement("div",{className:"row section"},/*#__PURE__*/react_default.a.createElement("div",{className:"col-md-10 col-sm-12"},/*#__PURE__*/react_default.a.createElement("div",{className:"about-history-txt"},/*#__PURE__*/react_default.a.createElement("div",{className:"single-about-history"},/*#__PURE__*/react_default.a.createElement("div",{className:"about-history-img"},/*#__PURE__*/react_default.a.createElement("img",{src:"assets/images/tutorial/Pic6.png",alt:"about"}))))),/*#__PURE__*/react_default.a.createElement("div",{className:"col-md-10 col-sm-12"},/*#__PURE__*/react_default.a.createElement("div",{className:"single-about-history"},/*#__PURE__*/react_default.a.createElement("div",{className:"about-history-txt"},/*#__PURE__*/react_default.a.createElement("p",null,/*#__PURE__*/react_default.a.createElement("b",null,"#Results")," of the CMDB search for SSRs using multiple options at a time and there is option for download."))))),/*#__PURE__*/react_default.a.createElement("div",{className:"row section"},/*#__PURE__*/react_default.a.createElement("div",{className:"col-md-10 col-sm-12"},/*#__PURE__*/react_default.a.createElement("div",{className:"about-history-txt"},/*#__PURE__*/react_default.a.createElement("div",{className:"single-about-history"},/*#__PURE__*/react_default.a.createElement("div",{className:"about-history-img"},/*#__PURE__*/react_default.a.createElement("img",{src:"assets/images/tutorial/Pic7.png",alt:"about"}))))),/*#__PURE__*/react_default.a.createElement("div",{className:"col-md-10 col-sm-12"},/*#__PURE__*/react_default.a.createElement("div",{className:"single-about-history"},/*#__PURE__*/react_default.a.createElement("div",{className:"about-history-txt"},/*#__PURE__*/react_default.a.createElement("p",null,/*#__PURE__*/react_default.a.createElement("b",null,"#Analysis page:")," Provides the statistics of SSRs distribution and abundance in the cashew genome and transcriptome."))))),/*#__PURE__*/react_default.a.createElement("div",{className:"row section"},/*#__PURE__*/react_default.a.createElement("div",{className:"col-md-10 col-sm-12"},/*#__PURE__*/react_default.a.createElement("div",{className:"about-history-txt"},/*#__PURE__*/react_default.a.createElement("div",{className:"single-about-history"},/*#__PURE__*/react_default.a.createElement("div",{className:"about-history-img"},/*#__PURE__*/react_default.a.createElement("img",{src:"assets/images/tutorial/Pic8.png",alt:"about"}))))),/*#__PURE__*/react_default.a.createElement("div",{className:"col-md-10 col-sm-12"},/*#__PURE__*/react_default.a.createElement("div",{className:"single-about-history"},/*#__PURE__*/react_default.a.createElement("div",{className:"about-history-txt"},/*#__PURE__*/react_default.a.createElement("p",null,/*#__PURE__*/react_default.a.createElement("b",null,"#Resources")," page provides the links to the portal related to cashew crop and bioinformatics research and databases."))))),/*#__PURE__*/react_default.a.createElement("div",{className:"row section"},/*#__PURE__*/react_default.a.createElement("div",{className:"col-md-10 col-sm-12"},/*#__PURE__*/react_default.a.createElement("div",{className:"about-history-txt"},/*#__PURE__*/react_default.a.createElement("div",{className:"single-about-history"},/*#__PURE__*/react_default.a.createElement("div",{className:"about-history-img"},/*#__PURE__*/react_default.a.createElement("img",{src:"assets/images/tutorial/Pic9.png",alt:"about"}))))),/*#__PURE__*/react_default.a.createElement("div",{className:"col-md-10 col-sm-12"},/*#__PURE__*/react_default.a.createElement("div",{className:"single-about-history"},/*#__PURE__*/react_default.a.createElement("div",{className:"about-history-txt"},/*#__PURE__*/react_default.a.createElement("p",null,/*#__PURE__*/react_default.a.createElement("b",null,"#Team/ Contact Us:")," Details of the team members involved in the construction of CMDB database and Contact details of the project investigator."))))))))));}}]);return Tutorial;}(react["Component"]);var actionCreators={};var mapStateToProps=function mapStateToProps(state){return{global:state.global,notifications:state.notifications};};// const WrappedDynamicRule = Form.create({ name: 'notifications' })(Notification);
/* harmony default export */ var tutorial = __webpack_exports__["default"] = (Object(react_router["f" /* withRouter */])(Object(es["b" /* connect */])(mapStateToProps,actionCreators)(tutorial_Tutorial)));

/***/ })

}]);
//# sourceMappingURL=12.4e3d2d1f40f4dd84f811.js.map